# eureka的端口
server:
  port: 8761
# 通过eureka.client.registerWithEureka和 fetchRegistry：false
# 告知SpringCloud这是一个eureka server
eureka:
  instance:
    hostname: localhost
  client:
    #是否注册自己的信息到EurekaServer,默认值为true
    register-with-eureka: false
    #是否拉取其它服务的信息,默认值为true
    fetch-registry: false
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      #defaultZone: http://localhost:8761/eureka/
      # eurka server的名字
spring:
  application:
    name: eureka-server01
  ribbon:
    ConnectTimeout: 250 # Ribbon的连接超时时间
    ReadTimeout: 1000 # Ribbon的数据读取超时时间
    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
    # 这里指定了负载均衡策略，这里使用随机策略(com.netflix.loadbalancer.RandomRule)，你也可以选择其他策略，
#    如轮询策略(com.netflix.loadbalancer.RoundRobinRule)或重试策略(com.netflix.loadbalancer.RetryRule)
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds:3000 #hystrix的超时时间 hystrix整合在feign中也依然生效
#          ribbon的超时时间要小于hystrix的超时时间，否则会在重试前先触发熔断